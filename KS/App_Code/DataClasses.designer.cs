#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="krzemo.studentlive.pl")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertaspnet_Role(aspnet_Role instance);
  partial void Updateaspnet_Role(aspnet_Role instance);
  partial void Deleteaspnet_Role(aspnet_Role instance);
  partial void Insertaspnet_User(aspnet_User instance);
  partial void Updateaspnet_User(aspnet_User instance);
  partial void Deleteaspnet_User(aspnet_User instance);
  partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void InsertDaneWeWy(DaneWeWy instance);
  partial void UpdateDaneWeWy(DaneWeWy instance);
  partial void DeleteDaneWeWy(DaneWeWy instance);
  partial void InsertDaneWZadaniach(DaneWZadaniach instance);
  partial void UpdateDaneWZadaniach(DaneWZadaniach instance);
  partial void DeleteDaneWZadaniach(DaneWZadaniach instance);
  partial void InsertGrupy(Grupy instance);
  partial void UpdateGrupy(Grupy instance);
  partial void DeleteGrupy(Grupy instance);
  partial void InsertStudenciWGrupach(StudenciWGrupach instance);
  partial void UpdateStudenciWGrupach(StudenciWGrupach instance);
  partial void DeleteStudenciWGrupach(StudenciWGrupach instance);
  partial void InsertZadania(Zadania instance);
  partial void UpdateZadania(Zadania instance);
  partial void DeleteZadania(Zadania instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["krzemo_studentlive_plConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
	{
		get
		{
			return this.GetTable<aspnet_Role>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_User> aspnet_Users
	{
		get
		{
			return this.GetTable<aspnet_User>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this.GetTable<aspnet_UsersInRole>();
		}
	}
	
	public System.Data.Linq.Table<DaneWeWy> DaneWeWies
	{
		get
		{
			return this.GetTable<DaneWeWy>();
		}
	}
	
	public System.Data.Linq.Table<DaneWZadaniach> DaneWZadaniaches
	{
		get
		{
			return this.GetTable<DaneWZadaniach>();
		}
	}
	
	public System.Data.Linq.Table<Grupy> Grupies
	{
		get
		{
			return this.GetTable<Grupy>();
		}
	}
	
	public System.Data.Linq.Table<StudenciWGrupach> StudenciWGrupaches
	{
		get
		{
			return this.GetTable<StudenciWGrupach>();
		}
	}
	
	public System.Data.Linq.Table<Zadania> Zadanias
	{
		get
		{
			return this.GetTable<Zadania>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _RoleId;
	
	private string _RoleName;
	
	private string _LoweredRoleName;
	
	private string _Description;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public aspnet_Role()
	{
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string RoleName
	{
		get
		{
			return this._RoleName;
		}
		set
		{
			if ((this._RoleName != value))
			{
				this.OnRoleNameChanging(value);
				this.SendPropertyChanging();
				this._RoleName = value;
				this.SendPropertyChanged("RoleName");
				this.OnRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredRoleName
	{
		get
		{
			return this._LoweredRoleName;
		}
		set
		{
			if ((this._LoweredRoleName != value))
			{
				this.OnLoweredRoleNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredRoleName = value;
				this.SendPropertyChanged("LoweredRoleName");
				this.OnLoweredRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _UserName;
	
	private string _LoweredUserName;
	
	private string _MobileAlias;
	
	private bool _IsAnonymous;
	
	private System.DateTime _LastActivityDate;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
	private EntitySet<StudenciWGrupach> _StudenciWGrupaches;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
	
	public aspnet_User()
	{
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		this._StudenciWGrupaches = new EntitySet<StudenciWGrupach>(new Action<StudenciWGrupach>(this.attach_StudenciWGrupaches), new Action<StudenciWGrupach>(this.detach_StudenciWGrupaches));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredUserName
	{
		get
		{
			return this._LoweredUserName;
		}
		set
		{
			if ((this._LoweredUserName != value))
			{
				this.OnLoweredUserNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredUserName = value;
				this.SendPropertyChanged("LoweredUserName");
				this.OnLoweredUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
	public string MobileAlias
	{
		get
		{
			return this._MobileAlias;
		}
		set
		{
			if ((this._MobileAlias != value))
			{
				this.OnMobileAliasChanging(value);
				this.SendPropertyChanging();
				this._MobileAlias = value;
				this.SendPropertyChanged("MobileAlias");
				this.OnMobileAliasChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
	public bool IsAnonymous
	{
		get
		{
			return this._IsAnonymous;
		}
		set
		{
			if ((this._IsAnonymous != value))
			{
				this.OnIsAnonymousChanging(value);
				this.SendPropertyChanging();
				this._IsAnonymous = value;
				this.SendPropertyChanged("IsAnonymous");
				this.OnIsAnonymousChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastActivityDate
	{
		get
		{
			return this._LastActivityDate;
		}
		set
		{
			if ((this._LastActivityDate != value))
			{
				this.OnLastActivityDateChanging(value);
				this.SendPropertyChanging();
				this._LastActivityDate = value;
				this.SendPropertyChanged("LastActivityDate");
				this.OnLastActivityDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_StudenciWGrupach", Storage="_StudenciWGrupaches", ThisKey="UserId", OtherKey="IdStudenta")]
	public EntitySet<StudenciWGrupach> StudenciWGrupaches
	{
		get
		{
			return this._StudenciWGrupaches;
		}
		set
		{
			this._StudenciWGrupaches.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_StudenciWGrupaches(StudenciWGrupach entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_StudenciWGrupaches(StudenciWGrupach entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _UserId;
	
	private System.Guid _RoleId;
	
	private EntityRef<aspnet_Role> _aspnet_Role;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
	
	public aspnet_UsersInRole()
	{
		this._aspnet_Role = default(EntityRef<aspnet_Role>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._aspnet_Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
	public aspnet_Role aspnet_Role
	{
		get
		{
			return this._aspnet_Role.Entity;
		}
		set
		{
			aspnet_Role previousValue = this._aspnet_Role.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Role.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_Role.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._RoleId = value.RoleId;
				}
				else
				{
					this._RoleId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Role");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DaneWeWy")]
public partial class DaneWeWy : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdDanych;
	
	private string _We;
	
	private string _Wy;
	
	private EntitySet<DaneWZadaniach> _DaneWZadaniaches;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDanychChanging(int value);
    partial void OnIdDanychChanged();
    partial void OnWeChanging(string value);
    partial void OnWeChanged();
    partial void OnWyChanging(string value);
    partial void OnWyChanged();
    #endregion
	
	public DaneWeWy()
	{
		this._DaneWZadaniaches = new EntitySet<DaneWZadaniach>(new Action<DaneWZadaniach>(this.attach_DaneWZadaniaches), new Action<DaneWZadaniach>(this.detach_DaneWZadaniaches));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanych", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdDanych
	{
		get
		{
			return this._IdDanych;
		}
		set
		{
			if ((this._IdDanych != value))
			{
				this.OnIdDanychChanging(value);
				this.SendPropertyChanging();
				this._IdDanych = value;
				this.SendPropertyChanged("IdDanych");
				this.OnIdDanychChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_We", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string We
	{
		get
		{
			return this._We;
		}
		set
		{
			if ((this._We != value))
			{
				this.OnWeChanging(value);
				this.SendPropertyChanging();
				this._We = value;
				this.SendPropertyChanged("We");
				this.OnWeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wy", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Wy
	{
		get
		{
			return this._Wy;
		}
		set
		{
			if ((this._Wy != value))
			{
				this.OnWyChanging(value);
				this.SendPropertyChanging();
				this._Wy = value;
				this.SendPropertyChanged("Wy");
				this.OnWyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DaneWeWy_DaneWZadaniach", Storage="_DaneWZadaniaches", ThisKey="IdDanych", OtherKey="IdDanych")]
	public EntitySet<DaneWZadaniach> DaneWZadaniaches
	{
		get
		{
			return this._DaneWZadaniaches;
		}
		set
		{
			this._DaneWZadaniaches.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DaneWZadaniaches(DaneWZadaniach entity)
	{
		this.SendPropertyChanging();
		entity.DaneWeWy = this;
	}
	
	private void detach_DaneWZadaniaches(DaneWZadaniach entity)
	{
		this.SendPropertyChanging();
		entity.DaneWeWy = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DaneWZadaniach")]
public partial class DaneWZadaniach : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdZadania;
	
	private int _IdDanych;
	
	private EntityRef<DaneWeWy> _DaneWeWy;
	
	private EntityRef<Zadania> _Zadania;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdZadaniaChanging(int value);
    partial void OnIdZadaniaChanged();
    partial void OnIdDanychChanging(int value);
    partial void OnIdDanychChanged();
    #endregion
	
	public DaneWZadaniach()
	{
		this._DaneWeWy = default(EntityRef<DaneWeWy>);
		this._Zadania = default(EntityRef<Zadania>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdZadania", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IdZadania
	{
		get
		{
			return this._IdZadania;
		}
		set
		{
			if ((this._IdZadania != value))
			{
				if (this._Zadania.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdZadaniaChanging(value);
				this.SendPropertyChanging();
				this._IdZadania = value;
				this.SendPropertyChanged("IdZadania");
				this.OnIdZadaniaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanych", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IdDanych
	{
		get
		{
			return this._IdDanych;
		}
		set
		{
			if ((this._IdDanych != value))
			{
				if (this._DaneWeWy.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdDanychChanging(value);
				this.SendPropertyChanging();
				this._IdDanych = value;
				this.SendPropertyChanged("IdDanych");
				this.OnIdDanychChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DaneWeWy_DaneWZadaniach", Storage="_DaneWeWy", ThisKey="IdDanych", OtherKey="IdDanych", IsForeignKey=true)]
	public DaneWeWy DaneWeWy
	{
		get
		{
			return this._DaneWeWy.Entity;
		}
		set
		{
			DaneWeWy previousValue = this._DaneWeWy.Entity;
			if (((previousValue != value) 
						|| (this._DaneWeWy.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DaneWeWy.Entity = null;
					previousValue.DaneWZadaniaches.Remove(this);
				}
				this._DaneWeWy.Entity = value;
				if ((value != null))
				{
					value.DaneWZadaniaches.Add(this);
					this._IdDanych = value.IdDanych;
				}
				else
				{
					this._IdDanych = default(int);
				}
				this.SendPropertyChanged("DaneWeWy");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zadania_DaneWZadaniach", Storage="_Zadania", ThisKey="IdZadania", OtherKey="IdZadania", IsForeignKey=true)]
	public Zadania Zadania
	{
		get
		{
			return this._Zadania.Entity;
		}
		set
		{
			Zadania previousValue = this._Zadania.Entity;
			if (((previousValue != value) 
						|| (this._Zadania.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Zadania.Entity = null;
					previousValue.DaneWZadaniaches.Remove(this);
				}
				this._Zadania.Entity = value;
				if ((value != null))
				{
					value.DaneWZadaniaches.Add(this);
					this._IdZadania = value.IdZadania;
				}
				else
				{
					this._IdZadania = default(int);
				}
				this.SendPropertyChanged("Zadania");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grupy")]
public partial class Grupy : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdGrupy;
	
	private string _Nazwa;
	
	private System.DateTime _DataUtworzenia;
	
	private System.Guid _IdWlasciciela;
	
	private bool _CzyUsuniety;
	
	private EntitySet<StudenciWGrupach> _StudenciWGrupaches;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdGrupyChanging(int value);
    partial void OnIdGrupyChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnDataUtworzeniaChanging(System.DateTime value);
    partial void OnDataUtworzeniaChanged();
    partial void OnIdWlascicielaChanging(System.Guid value);
    partial void OnIdWlascicielaChanged();
    partial void OnCzyUsunietyChanging(bool value);
    partial void OnCzyUsunietyChanged();
    #endregion
	
	public Grupy()
	{
		this._StudenciWGrupaches = new EntitySet<StudenciWGrupach>(new Action<StudenciWGrupach>(this.attach_StudenciWGrupaches), new Action<StudenciWGrupach>(this.detach_StudenciWGrupaches));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGrupy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdGrupy
	{
		get
		{
			return this._IdGrupy;
		}
		set
		{
			if ((this._IdGrupy != value))
			{
				this.OnIdGrupyChanging(value);
				this.SendPropertyChanging();
				this._IdGrupy = value;
				this.SendPropertyChanged("IdGrupy");
				this.OnIdGrupyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Nazwa
	{
		get
		{
			return this._Nazwa;
		}
		set
		{
			if ((this._Nazwa != value))
			{
				this.OnNazwaChanging(value);
				this.SendPropertyChanging();
				this._Nazwa = value;
				this.SendPropertyChanged("Nazwa");
				this.OnNazwaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataUtworzenia", DbType="DateTime NOT NULL")]
	public System.DateTime DataUtworzenia
	{
		get
		{
			return this._DataUtworzenia;
		}
		set
		{
			if ((this._DataUtworzenia != value))
			{
				this.OnDataUtworzeniaChanging(value);
				this.SendPropertyChanging();
				this._DataUtworzenia = value;
				this.SendPropertyChanged("DataUtworzenia");
				this.OnDataUtworzeniaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdWlasciciela", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid IdWlasciciela
	{
		get
		{
			return this._IdWlasciciela;
		}
		set
		{
			if ((this._IdWlasciciela != value))
			{
				this.OnIdWlascicielaChanging(value);
				this.SendPropertyChanging();
				this._IdWlasciciela = value;
				this.SendPropertyChanged("IdWlasciciela");
				this.OnIdWlascicielaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyUsuniety", DbType="Bit NOT NULL")]
	public bool CzyUsuniety
	{
		get
		{
			return this._CzyUsuniety;
		}
		set
		{
			if ((this._CzyUsuniety != value))
			{
				this.OnCzyUsunietyChanging(value);
				this.SendPropertyChanging();
				this._CzyUsuniety = value;
				this.SendPropertyChanged("CzyUsuniety");
				this.OnCzyUsunietyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupy_StudenciWGrupach", Storage="_StudenciWGrupaches", ThisKey="IdGrupy", OtherKey="IdGrupy")]
	public EntitySet<StudenciWGrupach> StudenciWGrupaches
	{
		get
		{
			return this._StudenciWGrupaches;
		}
		set
		{
			this._StudenciWGrupaches.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_StudenciWGrupaches(StudenciWGrupach entity)
	{
		this.SendPropertyChanging();
		entity.Grupy = this;
	}
	
	private void detach_StudenciWGrupaches(StudenciWGrupach entity)
	{
		this.SendPropertyChanging();
		entity.Grupy = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudenciWGrupach")]
public partial class StudenciWGrupach : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdGrupy;
	
	private System.Guid _IdStudenta;
	
	private System.DateTime _DataDodania;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
	private EntityRef<Grupy> _Grupy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdGrupyChanging(int value);
    partial void OnIdGrupyChanged();
    partial void OnIdStudentaChanging(System.Guid value);
    partial void OnIdStudentaChanged();
    partial void OnDataDodaniaChanging(System.DateTime value);
    partial void OnDataDodaniaChanged();
    #endregion
	
	public StudenciWGrupach()
	{
		this._aspnet_User = default(EntityRef<aspnet_User>);
		this._Grupy = default(EntityRef<Grupy>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGrupy", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IdGrupy
	{
		get
		{
			return this._IdGrupy;
		}
		set
		{
			if ((this._IdGrupy != value))
			{
				if (this._Grupy.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdGrupyChanging(value);
				this.SendPropertyChanging();
				this._IdGrupy = value;
				this.SendPropertyChanged("IdGrupy");
				this.OnIdGrupyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStudenta", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid IdStudenta
	{
		get
		{
			return this._IdStudenta;
		}
		set
		{
			if ((this._IdStudenta != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdStudentaChanging(value);
				this.SendPropertyChanging();
				this._IdStudenta = value;
				this.SendPropertyChanged("IdStudenta");
				this.OnIdStudentaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataDodania", DbType="DateTime NOT NULL")]
	public System.DateTime DataDodania
	{
		get
		{
			return this._DataDodania;
		}
		set
		{
			if ((this._DataDodania != value))
			{
				this.OnDataDodaniaChanging(value);
				this.SendPropertyChanging();
				this._DataDodania = value;
				this.SendPropertyChanged("DataDodania");
				this.OnDataDodaniaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_StudenciWGrupach", Storage="_aspnet_User", ThisKey="IdStudenta", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.StudenciWGrupaches.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.StudenciWGrupaches.Add(this);
					this._IdStudenta = value.UserId;
				}
				else
				{
					this._IdStudenta = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupy_StudenciWGrupach", Storage="_Grupy", ThisKey="IdGrupy", OtherKey="IdGrupy", IsForeignKey=true)]
	public Grupy Grupy
	{
		get
		{
			return this._Grupy.Entity;
		}
		set
		{
			Grupy previousValue = this._Grupy.Entity;
			if (((previousValue != value) 
						|| (this._Grupy.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Grupy.Entity = null;
					previousValue.StudenciWGrupaches.Remove(this);
				}
				this._Grupy.Entity = value;
				if ((value != null))
				{
					value.StudenciWGrupaches.Add(this);
					this._IdGrupy = value.IdGrupy;
				}
				else
				{
					this._IdGrupy = default(int);
				}
				this.SendPropertyChanged("Grupy");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zadania")]
public partial class Zadania : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdZadania;
	
	private string _Tytul;
	
	private string _Opis;
	
	private System.DateTime _DataOtwarcia;
	
	private System.DateTime _DataZamkniecia;
	
	private EntitySet<DaneWZadaniach> _DaneWZadaniaches;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdZadaniaChanging(int value);
    partial void OnIdZadaniaChanged();
    partial void OnTytulChanging(string value);
    partial void OnTytulChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnDataOtwarciaChanging(System.DateTime value);
    partial void OnDataOtwarciaChanged();
    partial void OnDataZamknieciaChanging(System.DateTime value);
    partial void OnDataZamknieciaChanged();
    #endregion
	
	public Zadania()
	{
		this._DaneWZadaniaches = new EntitySet<DaneWZadaniach>(new Action<DaneWZadaniach>(this.attach_DaneWZadaniaches), new Action<DaneWZadaniach>(this.detach_DaneWZadaniaches));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdZadania", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdZadania
	{
		get
		{
			return this._IdZadania;
		}
		set
		{
			if ((this._IdZadania != value))
			{
				this.OnIdZadaniaChanging(value);
				this.SendPropertyChanging();
				this._IdZadania = value;
				this.SendPropertyChanged("IdZadania");
				this.OnIdZadaniaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tytul", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Tytul
	{
		get
		{
			return this._Tytul;
		}
		set
		{
			if ((this._Tytul != value))
			{
				this.OnTytulChanging(value);
				this.SendPropertyChanging();
				this._Tytul = value;
				this.SendPropertyChanged("Tytul");
				this.OnTytulChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Opis
	{
		get
		{
			return this._Opis;
		}
		set
		{
			if ((this._Opis != value))
			{
				this.OnOpisChanging(value);
				this.SendPropertyChanging();
				this._Opis = value;
				this.SendPropertyChanged("Opis");
				this.OnOpisChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOtwarcia", DbType="DateTime NOT NULL")]
	public System.DateTime DataOtwarcia
	{
		get
		{
			return this._DataOtwarcia;
		}
		set
		{
			if ((this._DataOtwarcia != value))
			{
				this.OnDataOtwarciaChanging(value);
				this.SendPropertyChanging();
				this._DataOtwarcia = value;
				this.SendPropertyChanged("DataOtwarcia");
				this.OnDataOtwarciaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataZamkniecia", DbType="DateTime NOT NULL")]
	public System.DateTime DataZamkniecia
	{
		get
		{
			return this._DataZamkniecia;
		}
		set
		{
			if ((this._DataZamkniecia != value))
			{
				this.OnDataZamknieciaChanging(value);
				this.SendPropertyChanging();
				this._DataZamkniecia = value;
				this.SendPropertyChanged("DataZamkniecia");
				this.OnDataZamknieciaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zadania_DaneWZadaniach", Storage="_DaneWZadaniaches", ThisKey="IdZadania", OtherKey="IdZadania")]
	public EntitySet<DaneWZadaniach> DaneWZadaniaches
	{
		get
		{
			return this._DaneWZadaniaches;
		}
		set
		{
			this._DaneWZadaniaches.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DaneWZadaniaches(DaneWZadaniach entity)
	{
		this.SendPropertyChanging();
		entity.Zadania = this;
	}
	
	private void detach_DaneWZadaniaches(DaneWZadaniach entity)
	{
		this.SendPropertyChanging();
		entity.Zadania = null;
	}
}
#pragma warning restore 1591
